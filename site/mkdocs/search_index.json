{
    "docs": [
        {
            "location": "/", 
            "text": "Toolbox \nby MG\n\n\n\n\nThe Toolbox contains all the little tools you never know where to find.\n\n\n\n\nText Editor\n\n\nVim\n : Vim is a clone of Bill Joy's vi text editor program for Unix. It was written by Bram Moolenaar based on source for a port of the Stevie editor to the Amiga and first released publicly in 1991. Vim is designed for use both from a command-line interface and as a standalone application in a graphical user interface. Vim is free and open source software and is released under a license that includes some charityware clauses, encouraging users who enjoy the software to consider donating to children in Uganda. The license is compatible with the GNU General Public License. Although it was originally released for the Amiga, Vim has since been developed to be cross-platform, supporting many other platforms. In 2006, it was voted the most popular editor amongst Linux Journal readers; in 2015 the Stack Overflow developer survey found it to be the third most popular text editor; and in 2016 the Stack Overflow developer survey found it to be the fourth most popular development environment.\n\n\nVirtual Machine\n\n\nVirtualBox\n : Oracle VM VirtualBox (formerly Sun VirtualBox, Sun xVM VirtualBox and Innotek VirtualBox) is a free and open-source hypervisor for x86 computers currently being developed by Oracle Corporation. Developed initially by Innotek GmbH, it was acquired by Sun Microsystems in 2008 which was in turn acquired by Oracle in 2010. VirtualBox may be installed on a number of host operating systems, including: Linux, macOS, Windows, Solaris, and OpenSolaris. There are also ports to FreeBSD and Genode. It supports the creation and management of guest virtual machines running versions and derivations of Windows, Linux, BSD, OS/2, Solaris, Haiku, OSx86 and others, and limited virtualization of macOS guests on Apple hardware. For some guest operating systems, a \"Guest Additions\" package of device drivers and system applications is available which typically improves performance, especially of graphics.\n\n\nVMWare\n : VMware, Inc. is a subsidiary of Dell Technologies that provides cloud computing and platform virtualization software and services. It was the first commercially successful company to virtualize the x86 architecture. VMware's desktop software runs on Microsoft Windows, Linux, and macOS, while its enterprise software hypervisor for servers, VMware ESXi, is a bare-metal hypervisor that runs directly on server hardware without requiring an additional underlying operating system.", 
            "title": "Home"
        }, 
        {
            "location": "/#toolbox-by-mg", 
            "text": "The Toolbox contains all the little tools you never know where to find.", 
            "title": "Toolbox by MG"
        }, 
        {
            "location": "/#text-editor", 
            "text": "Vim  : Vim is a clone of Bill Joy's vi text editor program for Unix. It was written by Bram Moolenaar based on source for a port of the Stevie editor to the Amiga and first released publicly in 1991. Vim is designed for use both from a command-line interface and as a standalone application in a graphical user interface. Vim is free and open source software and is released under a license that includes some charityware clauses, encouraging users who enjoy the software to consider donating to children in Uganda. The license is compatible with the GNU General Public License. Although it was originally released for the Amiga, Vim has since been developed to be cross-platform, supporting many other platforms. In 2006, it was voted the most popular editor amongst Linux Journal readers; in 2015 the Stack Overflow developer survey found it to be the third most popular text editor; and in 2016 the Stack Overflow developer survey found it to be the fourth most popular development environment.", 
            "title": "Text Editor"
        }, 
        {
            "location": "/#virtual-machine", 
            "text": "VirtualBox  : Oracle VM VirtualBox (formerly Sun VirtualBox, Sun xVM VirtualBox and Innotek VirtualBox) is a free and open-source hypervisor for x86 computers currently being developed by Oracle Corporation. Developed initially by Innotek GmbH, it was acquired by Sun Microsystems in 2008 which was in turn acquired by Oracle in 2010. VirtualBox may be installed on a number of host operating systems, including: Linux, macOS, Windows, Solaris, and OpenSolaris. There are also ports to FreeBSD and Genode. It supports the creation and management of guest virtual machines running versions and derivations of Windows, Linux, BSD, OS/2, Solaris, Haiku, OSx86 and others, and limited virtualization of macOS guests on Apple hardware. For some guest operating systems, a \"Guest Additions\" package of device drivers and system applications is available which typically improves performance, especially of graphics.  VMWare  : VMware, Inc. is a subsidiary of Dell Technologies that provides cloud computing and platform virtualization software and services. It was the first commercially successful company to virtualize the x86 architecture. VMware's desktop software runs on Microsoft Windows, Linux, and macOS, while its enterprise software hypervisor for servers, VMware ESXi, is a bare-metal hypervisor that runs directly on server hardware without requiring an additional underlying operating system.", 
            "title": "Virtual Machine"
        }, 
        {
            "location": "/vim/", 
            "text": "Vim\n\n\nRunning Vim for the First Time\n\n\nTo start Vim, enter this command:\n\n\ngvim file.txt\n\n\n\nIn UNIX you can type this at any command prompt.  If you are running Microsoft\nWindows, open an MS-DOS prompt window and enter the command.\n   In either case, Vim starts editing a file called file.txt.  Because this\nis a new file, you get a blank window. This is what your screen will look\nlike:\n\n\n+---------------------------------------+\n|#                  |\n|~                  |\n|~                  |\n|~                  |\n|~                  |\n|\"file.txt\" [New file]          |\n+---------------------------------------+\n    ('#\" is the cursor position.)\n\n\n\nThe tilde (~) lines indicate lines not in the file.  In other words, when Vim\nruns out of file to display, it displays tilde lines.  At the bottom of the\nscreen, a message line indicates the file is named file.txt and shows that you\nare creating a new file.  The message information is temporary and other\ninformation overwrites it.\n\n\nTHE VIM COMMAND\n\n\nThe gvim command causes the editor to create a new window for editing.  If you\nuse this command:\n\n\nvim file.txt\n\n\n\nthe editing occurs inside your command window.  In other words, if you are\nrunning inside an xterm, the editor uses your xterm window.  If you are using\nan MS-DOS command prompt window under Microsoft Windows, the editing occurs\ninside this window.  The text in the window will look the same for both\nversions, but with gvim you have extra features, like a menu bar.  More about\nthat later.\n\n\nInserting text\n\n\nThe Vim editor is a modal editor.  That means that the editor behaves\ndifferently, depending on which mode you are in.  The two basic modes are\ncalled Normal mode and Insert mode.  In Normal mode the characters you type\nare commands.  In Insert mode the characters are inserted as text.\n   Since you have just started Vim it will be in Normal mode.  To start Insert\nmode you type the \"i\" command (i for Insert).  Then you can enter\nthe text.  It will be inserted into the file.  Do not worry if you make\nmistakes; you can correct them later.  To enter the following programmer's\nlimerick, this is what you type:\n\n\niA very intelligent turtle\nFound programming UNIX a hurdle\n\n\n\nAfter typing \"turtle\" you press the \n key to start a new line.  Finally\nyou press the \n key to stop Insert mode and go back to Normal mode.  You\nnow have two lines of text in your Vim window:\n\n\n+---------------------------------------+\n|A very intelligent turtle      |\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|                   |\n+---------------------------------------+\n\n\n\nWHAT IS THE MODE?\n\n\nTo be able to see what mode you are in, type this command:\n\n\n:set showmode\n\n\n\nYou will notice that when typing the colon Vim moves the cursor to the last\nline of the window.  That's where you type colon commands (commands that start\nwith a colon).  Finish this command by pressing the \nEnter\n key\n (all commands\nthat start with a colon are finished this way).\n   Now, if you type the \"\ni\n\" command Vim will display --INSERT-- at the bottom\nof the window.  This indicates you are in Insert mode.\n\n\n+---------------------------------------+\n|A very intelligent turtle      |\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|-- INSERT --               |\n+---------------------------------------+\n\n\n\nIf you press \nEsc\n to go back to Normal mode the last line will be made blank.\n\n\nGETTING OUT OF TROUBLE\n\n\nOne of the problems for Vim novices is mode confusion, which is caused by\nforgetting which mode you are in or by accidentally typing a command that\nswitches modes.  To get back to Normal mode, no matter what mode you are in,\npress the \n key.  Sometimes you have to press it twice.  If Vim beeps back\nat you, you already are in Normal mode.\n\n\n==============================================================================\n\n\nMoving around\n\n\nAfter you return to Normal mode, you can move around by using these keys:\n\n\nh   left                        *hjkl*\nj   down\nk   up\nl   right\n\n\n\nAt first, it may appear that these commands were chosen at random.  After all,\nwho ever heard of using \nl\n for right?  But actually, there is a very good\nreason for these choices: Moving the cursor is the most common thing you do in\nan editor, and these keys are on the home row of your right hand.  In other\nwords, these commands are placed where you can type them the fastest\n(especially when you type with ten fingers).\n\n\nNote:\nYou can also move the cursor by using the arrow keys.  If you do,\nhowever, you greatly slow down your editing because to press the arrow\nkeys, you must move your hand from the text keys to the arrow keys.\nConsidering that you might be doing it hundreds of times an hour, this\ncan take a significant amount of time.\n   Also, there are keyboards which do not have arrow keys, or which\nlocate them in unusual places; therefore, knowing the use of the hjkl\nkeys helps in those situations.\n\n\n\nOne way to remember these commands is that \nh\n is on the left, \nl\n is on the\nright and \nj\n points down.  In a picture:\n\n\n           k\n       h     l\n         j\n\n\n\nThe best way to learn these commands is by using them.  Use the \"i\" command to\ninsert some more lines of text.  Then use the hjkl keys to move around and\ninsert a word somewhere.  Don't forget to press \n to go back to Normal\nmode.  The |vimtutor| is also a nice way to learn by doing.\n\n\nFor Japanese users, Hiroshi Iwatani suggested using this:\n\n\n        Komsomolsk\n            ^\n            |\n   Huan Ho  \n--- ---\n  Los Angeles\n(Yellow river)      |\n            v\n          Java (the island, not the programming language)\n\n\n\n==============================================================================\n\n\nDeleting characters\n\n\nTo delete a character, move the cursor over it and type \"x\".  (This is a\nthrowback to the old days of the typewriter, when you deleted things by typing\nxxxx over them.)  Move the cursor to the beginning of the first line, for\nexample, and type xxxxxxx (seven x's) to delete \"A very \".  The result should\nlook like this:\n\n\n+---------------------------------------+\n|intelligent turtle         |\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|                   |\n+---------------------------------------+\n\n\n\nNow you can insert new text, for example by typing:\n\n\niA young \nEsc\n\n\n\n\nThis begins an insert (the i), inserts the words \"A young\", and then exits\ninsert mode (the final \n).  The result:\n\n\n+---------------------------------------+\n|A young intelligent turtle     |\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|                   |\n+---------------------------------------+\n\n\n\nDELETING A LINE\n\n\nTo delete a whole line use the \"dd\" command.  The following line will\nthen move up to fill the gap:\n\n\n+---------------------------------------+\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|~                  |\n|                   |\n+---------------------------------------+\n\n\n\nDELETING A LINE BREAK\n\n\nIn Vim you can join two lines together, which means that the line break\nbetween them is deleted.  The \"J\" command does this.\n   Take these two lines:\n\n\nA young intelligent \nturtle\n\n\n\nMove the cursor to the first line and press \"J\":\n\n\nA young intelligent turtle\n\n\n\n==============================================================================\n\n\nUndo and Redo\n\n\nSuppose you delete too much.  Well, you can type it in again, but an easier\nway exists.  The \"u\" command undoes the last edit.  Take a look at this in\naction: After using \"dd\" to delete the first line, \"u\" brings it back.\n   Another one: Move the cursor to the A in the first line:\n\n\nA young intelligent turtle\n\n\n\nNow type xxxxxxx to delete \"A young\".  The result is as follows:\n\n\n intelligent turtle\n\n\n\nType \"u\" to undo the last delete.  That delete removed the g, so the undo\nrestores the character.\n\n\ng intelligent turtle\n\n\n\nThe next u command restores the next-to-last character deleted:\n\n\nng intelligent turtle\n\n\n\nThe next u command gives you the u, and so on:\n\n\nung intelligent turtle \noung intelligent turtle \nyoung intelligent turtle \n young intelligent turtle \nA young intelligent turtle\n\nNote:\nIf you type \"u\" twice, and the result is that you get the same text\nback, you have Vim configured to work Vi compatible.  Look here to fix\nthis: |not-compatible|.\n   This text assumes you work \"The Vim Way\".  You might prefer to use\nthe good old Vi way, but you will have to watch out for small\ndifferences in the text then.\n\n\n\nREDO\n\n\nIf you undo too many times, you can press CTRL-R (redo) to reverse the\npreceding command.  In other words, it undoes the undo.  To see this in\naction, press CTRL-R twice.  The character A and the space after it disappear:\n\n\nyoung intelligent turtle\n\n\n\nThere's a special version of the undo command, the \"U\" (undo line) command.\nThe undo line command undoes all the changes made on the last line that was\nedited.  Typing this command twice cancels the preceding \"U\".\n\n\nA very intelligent turtle \n  xxxx              Delete very\n\nA intelligent turtle \n          xxxxxx        Delete turtle\n\nA intelligent \n                Restore line with \"U\"\nA very intelligent turtle \n                Undo \"U\" with \"u\"\nA intelligent\n\n\n\nThe \"U\" command is a change by itself, which the \"u\" command undoes and CTRL-R\nredoes.  This might be a bit confusing.  Don't worry, with \"u\" and CTRL-R you\ncan go to any of the situations you had.  More about that in section |32.2|.\n\n\nReference: http://vimdoc.sourceforge.net/htmldoc/usr_02.html", 
            "title": "Vim"
        }, 
        {
            "location": "/vim/#vim", 
            "text": "", 
            "title": "Vim"
        }, 
        {
            "location": "/vim/#running-vim-for-the-first-time", 
            "text": "To start Vim, enter this command:  gvim file.txt  In UNIX you can type this at any command prompt.  If you are running Microsoft\nWindows, open an MS-DOS prompt window and enter the command.\n   In either case, Vim starts editing a file called file.txt.  Because this\nis a new file, you get a blank window. This is what your screen will look\nlike:  +---------------------------------------+\n|#                  |\n|~                  |\n|~                  |\n|~                  |\n|~                  |\n|\"file.txt\" [New file]          |\n+---------------------------------------+\n    ('#\" is the cursor position.)  The tilde (~) lines indicate lines not in the file.  In other words, when Vim\nruns out of file to display, it displays tilde lines.  At the bottom of the\nscreen, a message line indicates the file is named file.txt and shows that you\nare creating a new file.  The message information is temporary and other\ninformation overwrites it.  THE VIM COMMAND  The gvim command causes the editor to create a new window for editing.  If you\nuse this command:  vim file.txt  the editing occurs inside your command window.  In other words, if you are\nrunning inside an xterm, the editor uses your xterm window.  If you are using\nan MS-DOS command prompt window under Microsoft Windows, the editing occurs\ninside this window.  The text in the window will look the same for both\nversions, but with gvim you have extra features, like a menu bar.  More about\nthat later.", 
            "title": "Running Vim for the First Time"
        }, 
        {
            "location": "/vim/#inserting-text", 
            "text": "The Vim editor is a modal editor.  That means that the editor behaves\ndifferently, depending on which mode you are in.  The two basic modes are\ncalled Normal mode and Insert mode.  In Normal mode the characters you type\nare commands.  In Insert mode the characters are inserted as text.\n   Since you have just started Vim it will be in Normal mode.  To start Insert\nmode you type the \"i\" command (i for Insert).  Then you can enter\nthe text.  It will be inserted into the file.  Do not worry if you make\nmistakes; you can correct them later.  To enter the following programmer's\nlimerick, this is what you type:  iA very intelligent turtle\nFound programming UNIX a hurdle  After typing \"turtle\" you press the   key to start a new line.  Finally\nyou press the   key to stop Insert mode and go back to Normal mode.  You\nnow have two lines of text in your Vim window:  +---------------------------------------+\n|A very intelligent turtle      |\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|                   |\n+---------------------------------------+  WHAT IS THE MODE?  To be able to see what mode you are in, type this command:  :set showmode  You will notice that when typing the colon Vim moves the cursor to the last\nline of the window.  That's where you type colon commands (commands that start\nwith a colon).  Finish this command by pressing the  Enter  key  (all commands\nthat start with a colon are finished this way).\n   Now, if you type the \" i \" command Vim will display --INSERT-- at the bottom\nof the window.  This indicates you are in Insert mode.  +---------------------------------------+\n|A very intelligent turtle      |\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|-- INSERT --               |\n+---------------------------------------+  If you press  Esc  to go back to Normal mode the last line will be made blank.  GETTING OUT OF TROUBLE  One of the problems for Vim novices is mode confusion, which is caused by\nforgetting which mode you are in or by accidentally typing a command that\nswitches modes.  To get back to Normal mode, no matter what mode you are in,\npress the   key.  Sometimes you have to press it twice.  If Vim beeps back\nat you, you already are in Normal mode.  ==============================================================================", 
            "title": "Inserting text"
        }, 
        {
            "location": "/vim/#moving-around", 
            "text": "After you return to Normal mode, you can move around by using these keys:  h   left                        *hjkl*\nj   down\nk   up\nl   right  At first, it may appear that these commands were chosen at random.  After all,\nwho ever heard of using  l  for right?  But actually, there is a very good\nreason for these choices: Moving the cursor is the most common thing you do in\nan editor, and these keys are on the home row of your right hand.  In other\nwords, these commands are placed where you can type them the fastest\n(especially when you type with ten fingers).  Note:\nYou can also move the cursor by using the arrow keys.  If you do,\nhowever, you greatly slow down your editing because to press the arrow\nkeys, you must move your hand from the text keys to the arrow keys.\nConsidering that you might be doing it hundreds of times an hour, this\ncan take a significant amount of time.\n   Also, there are keyboards which do not have arrow keys, or which\nlocate them in unusual places; therefore, knowing the use of the hjkl\nkeys helps in those situations.  One way to remember these commands is that  h  is on the left,  l  is on the\nright and  j  points down.  In a picture:             k\n       h     l\n         j  The best way to learn these commands is by using them.  Use the \"i\" command to\ninsert some more lines of text.  Then use the hjkl keys to move around and\ninsert a word somewhere.  Don't forget to press   to go back to Normal\nmode.  The |vimtutor| is also a nice way to learn by doing.  For Japanese users, Hiroshi Iwatani suggested using this:          Komsomolsk\n            ^\n            |\n   Huan Ho   --- ---   Los Angeles\n(Yellow river)      |\n            v\n          Java (the island, not the programming language)  ==============================================================================", 
            "title": "Moving around"
        }, 
        {
            "location": "/vim/#deleting-characters", 
            "text": "To delete a character, move the cursor over it and type \"x\".  (This is a\nthrowback to the old days of the typewriter, when you deleted things by typing\nxxxx over them.)  Move the cursor to the beginning of the first line, for\nexample, and type xxxxxxx (seven x's) to delete \"A very \".  The result should\nlook like this:  +---------------------------------------+\n|intelligent turtle         |\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|                   |\n+---------------------------------------+  Now you can insert new text, for example by typing:  iA young  Esc   This begins an insert (the i), inserts the words \"A young\", and then exits\ninsert mode (the final  ).  The result:  +---------------------------------------+\n|A young intelligent turtle     |\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|                   |\n+---------------------------------------+  DELETING A LINE  To delete a whole line use the \"dd\" command.  The following line will\nthen move up to fill the gap:  +---------------------------------------+\n|Found programming UNIX a hurdle    |\n|~                  |\n|~                  |\n|~                  |\n|                   |\n+---------------------------------------+  DELETING A LINE BREAK  In Vim you can join two lines together, which means that the line break\nbetween them is deleted.  The \"J\" command does this.\n   Take these two lines:  A young intelligent \nturtle  Move the cursor to the first line and press \"J\":  A young intelligent turtle  ==============================================================================", 
            "title": "Deleting characters"
        }, 
        {
            "location": "/vim/#undo-and-redo", 
            "text": "Suppose you delete too much.  Well, you can type it in again, but an easier\nway exists.  The \"u\" command undoes the last edit.  Take a look at this in\naction: After using \"dd\" to delete the first line, \"u\" brings it back.\n   Another one: Move the cursor to the A in the first line:  A young intelligent turtle  Now type xxxxxxx to delete \"A young\".  The result is as follows:   intelligent turtle  Type \"u\" to undo the last delete.  That delete removed the g, so the undo\nrestores the character.  g intelligent turtle  The next u command restores the next-to-last character deleted:  ng intelligent turtle  The next u command gives you the u, and so on:  ung intelligent turtle \noung intelligent turtle \nyoung intelligent turtle \n young intelligent turtle \nA young intelligent turtle\n\nNote:\nIf you type \"u\" twice, and the result is that you get the same text\nback, you have Vim configured to work Vi compatible.  Look here to fix\nthis: |not-compatible|.\n   This text assumes you work \"The Vim Way\".  You might prefer to use\nthe good old Vi way, but you will have to watch out for small\ndifferences in the text then.  REDO  If you undo too many times, you can press CTRL-R (redo) to reverse the\npreceding command.  In other words, it undoes the undo.  To see this in\naction, press CTRL-R twice.  The character A and the space after it disappear:  young intelligent turtle  There's a special version of the undo command, the \"U\" (undo line) command.\nThe undo line command undoes all the changes made on the last line that was\nedited.  Typing this command twice cancels the preceding \"U\".  A very intelligent turtle \n  xxxx              Delete very\n\nA intelligent turtle \n          xxxxxx        Delete turtle\n\nA intelligent \n                Restore line with \"U\"\nA very intelligent turtle \n                Undo \"U\" with \"u\"\nA intelligent  The \"U\" command is a change by itself, which the \"u\" command undoes and CTRL-R\nredoes.  This might be a bit confusing.  Don't worry, with \"u\" and CTRL-R you\ncan go to any of the situations you had.  More about that in section |32.2|.  Reference: http://vimdoc.sourceforge.net/htmldoc/usr_02.html", 
            "title": "Undo and Redo"
        }, 
        {
            "location": "/virtual_box/", 
            "text": "Virtual Box\n\n\nExport and Import VirtualBox VM images?\n\n\nExport\n\n\nOpen VirtualBox and enter into the \nFile\n option to choice \nExport Appliance...\n\n\n\n\nYou will then get an assistance window to help you generating the image.\n\n\n\n\nSelect the VM to export\n\n\nEnter the output file path and name\n\n\n\n\n\n\nYou can choice a format, which I always leave the default OVF 1.\n\n\n\n\nFinally you can write metadata like Version and Description\n\n\n\n\nNow you have an OVA file that you can carry to whatever machine to use it.\n\n\nImport\n\n\nOpen VirtualBox and enter into the \nFile\n option to choice \nImport\n\n\nYou will then get an assistance window to help you loading the image.\n\n\n\n\nEnter the path to the file that you have previously exported\n\n\n\n\n\n\n\n\nThen you can modify the settings of the VM like RAM size, CPU, etc.\n\n\n\n\n\n\nMy recommendation on this is to enable the \nReinitialize the MAC address of all the network cards\n option\n\n\n\n\nPress \nImport\n and done!\n\n\n\n\nNow you have cloned the VM from the host machine into another one\n\n\nReference: \nhttps://askubuntu.com/questions/588426/how-to-export-and-import-virtualbox-vm-images\n\n\nInstall Guest Additions\n\n\nGuest Additions installs on the guest system and includes device drivers and system applications that optimize performance of the machine.  Launch the guest OS in VirtualBox and click on Devices and Install Guest Additions.\n\n\n\n\nThe AutoPlay window opens on the guest OS and click on the Run VBox Windows Additions executable.\n\n\n\n\nClick yes when the UAC screen comes up.\n\n\n\n\nNow simply follow through the installation wizard.\n\n\n\n\nDuring the installation wizard you can choose the Direct3D acceleration if you would like it.  Remember this is going to take up more of your Host OS\u2019s resources and is still experimental possibly making the guest unstable.\n\n\n\n\nWhen the installation starts you will need to allow the Sun display adapters to be installed.\n\n\n\n\nAfter everything has completed a reboot is required.\n\n\n\n\nReference: \nhttps://www.howtogeek.com/howto/2845/install-guest-additions-to-windows-and-linux-vms-in-virtualbox/", 
            "title": "Virtual Box"
        }, 
        {
            "location": "/virtual_box/#virtual-box", 
            "text": "", 
            "title": "Virtual Box"
        }, 
        {
            "location": "/virtual_box/#export-and-import-virtualbox-vm-images", 
            "text": "", 
            "title": "Export and Import VirtualBox VM images?"
        }, 
        {
            "location": "/virtual_box/#export", 
            "text": "Open VirtualBox and enter into the  File  option to choice  Export Appliance...   You will then get an assistance window to help you generating the image.   Select the VM to export  Enter the output file path and name    You can choice a format, which I always leave the default OVF 1.   Finally you can write metadata like Version and Description   Now you have an OVA file that you can carry to whatever machine to use it.", 
            "title": "Export"
        }, 
        {
            "location": "/virtual_box/#import", 
            "text": "Open VirtualBox and enter into the  File  option to choice  Import  You will then get an assistance window to help you loading the image.   Enter the path to the file that you have previously exported     Then you can modify the settings of the VM like RAM size, CPU, etc.    My recommendation on this is to enable the  Reinitialize the MAC address of all the network cards  option   Press  Import  and done!   Now you have cloned the VM from the host machine into another one  Reference:  https://askubuntu.com/questions/588426/how-to-export-and-import-virtualbox-vm-images", 
            "title": "Import"
        }, 
        {
            "location": "/virtual_box/#install-guest-additions", 
            "text": "Guest Additions installs on the guest system and includes device drivers and system applications that optimize performance of the machine.  Launch the guest OS in VirtualBox and click on Devices and Install Guest Additions.   The AutoPlay window opens on the guest OS and click on the Run VBox Windows Additions executable.   Click yes when the UAC screen comes up.   Now simply follow through the installation wizard.   During the installation wizard you can choose the Direct3D acceleration if you would like it.  Remember this is going to take up more of your Host OS\u2019s resources and is still experimental possibly making the guest unstable.   When the installation starts you will need to allow the Sun display adapters to be installed.   After everything has completed a reboot is required.   Reference:  https://www.howtogeek.com/howto/2845/install-guest-additions-to-windows-and-linux-vms-in-virtualbox/", 
            "title": "Install Guest Additions"
        }, 
        {
            "location": "/vmware/", 
            "text": "VMWare\n\n\nVMware Workstation is a program that allows you to run a virtual computer within your physical computer. The virtual computer runs as if it was its own machine. A virtual machine is great for trying out new operating systems such as Linux, visiting websites you don't trust, creating a computing environment specifically for children, testing the effects of computer viruses, and much more. You can even print and plug in USB drives. Read this guide to get the most out of VMware Workstation.\n\n\nInstalling VMware Workstation\n\n\n\n\n1. Make sure your computer meets the system requirements.\n Because you will be running an operating system from within your own operating system, VMware Workstation has fairly high system requirements. If you don\u2019t meet these, you may not be able to run VMware effectively.\nYou must have a 64-bit processor.\nVMware supports Windows and Linux operating systems.\nYou must have enough memory to run your operating system, the virtual operating system, and any programs inside that operating system. 1 GB is the minimum, but 3 or more is recommended.\nYou must have a 16-bit or 32-bit display adapter. 3D effects will most likely not work well inside the virtual operating system, so gaming is not always efficient.\nYou need at least 1.5 GB of free space to install VMware Workstation, along with at least 1 GB per operating system that you install.\n\n\n\n\n2. Download the VMware software.\n You can download the VMware installer from the Download Center on the VMware website. Select the newest version and click the link for the installer. You will need to login with your VMware username.\nYou will be asked to read and review the license agreement before you can download the file.\nYou can only have one version of VMware Workstation installed at a time.\n\n\n\n\n3. Install VMware Workstation.\n Once you have downloaded the file, right-click on the file and select \u201cRun as administrator\u201d.\nYou will be asked to review the license again.\nMost users can use the Typical installation option.\nAt the end of the installation, you will be prompted for your license key.\nOnce the installation is finished, restart the computer.\nPart\n\n\nInstalling an Operating System\n\n\n\n\n1. Open VMware.\n Installing a virtual operating system is much like installing it on a regular PC. You will need to have the installation disc or ISO image as well as any necessary licenses for the operating system that you want to install.\n\n\n\n\nYou can install most distributions of Linux as well as any version of Windows.\n\n\n\n\n\n\n2. Click File.\n Select New Virtual Machine and then choose Typical. VMware will prompt you for the installation media. If it recognizes the operating system, it will enable Easy Installation:\n\n\n\n\nPhysical disc\n \u2013 Insert the installation disc for the operating system you want to install and then select the drive in VMware.\n\n\nISO image\n \u2013 Browse to the location of the ISO file on your computer.\n\n\nInstall operating system later\n. This will create a blank virtual disk. You will need to manually install the operating system later.\n\n\n\n\n\n\n3. Enter in the details for the operating system.\n For Windows and other licensed operating systems, you will need to enter your product key. You will also need to enter your preferred username and a password if you want one.\n* If you are not using Easy Install, you will need to browse the list for the operating system you are installing.\n\n\n\n\n4. Name your virtual machine.\n The name will help you identify it on your physical computer. It will also help distinguish between multiple virtual computers running different operating systems.\n\n\n\n\n5. Set the disk size.\n You can allocate any amount of free space on your computer to the virtual machine to act as the installed operating system\u2019s hard drive. Make sure to set enough to install any programs that you want to run in the virtual machine.\n\n\n\n\n6. Customize your virtual machine\u2019s virtual hardware.\n You can set the virtual machine to emulate specific hardware by clicking the \u201cCustomize Hardware\u201d button. This can be useful if you are trying to run an older program that only supports certain hardware. Setting this is optional.\n\n\n\n\n7. Set the virtual machine to start.\n Check the box labeled \u201cPower on this virtual machine after creation\u201d if you want the virtual machine to start up as soon as you finish making it. If you don\u2019t check this box, you can select your virtual machine from the list in VMware and click the Power On button.\n\n\n\n\n8. Wait for your installation to complete.\n Once you\u2019ve powered on the virtual machine for the first time, the operating system will begin to install automatically. If you provided all of the correct information during the setup of the virtual machine, then you should not have to do anything.\nIf you didn\u2019t enter your product key or create a username during the virtual machine setup, you will most likely be prompted during the installation of the operating system.\n\n\n\n\n9. Check that VMware Tools is installed.\n Once the operating system is installed, the program VMware Tools should be automatically installed. Check that it appears on the desktop or in the program files for the newly installed operating system.\n\n\nVMware tools are configuration options for your virtual machine, and keeps your virtual machine up to date with any software changes.\n\n\nNavigating VMware\n\n\n\n\n1. Start a virtual machine.\n To start a virtual machine, click the VM menu and select the virtual machine that you want to turn on. You can choose to start the virtual machine normally, or boot directly to the virtual BIOS.\n\n\n\n\n2. Stop a virtual machine.\n To stop a virtual machine, select it and then click the VM menu. Select the Power option.\n\n\n\n\nPower Off\n \u2013 The virtual machine turns off as if the power was cut out.\n\n\nShut Down Guest\n \u2013 This sends a shutdown signal to the virtual machine which causes the virtual machine to shut down as if you had selected the shutdown option.\n\n\nYou can also turn off the virtual machine by using the shutdown option in the virtual operating system.\n\n\n\n\n\n\n3. Move files between the virtual machine and your physical computer.\n Moving files between your computer and the virtual machine is as simple as dragging and dropping. Files can be moved in both directions between the computer and the virtual machine, and can also be dragged from one virtual machine to another.\n\n\n\n\nWhen you drag and drop, the original will stay in the original location and a copy will be created in the new location.\n\n\nYou can also move files by copying and pasting.\n\n\nVirtual machines can connect to shared folders as well.\n\n\n\n\n\n\n4. Add a printer to your virtual machine.\n You can add any printer to your virtual machine without having to install any extra drivers, as long as it is already installed on your host computer.\n\n\n\n\nSelect the virtual machine that you want to add the printer to.\n\n\nClick the VM menu and select Settings.\n\n\nClick the Hardware tab, and then click Add. This will start the Add Hardware wizard.\n\n\nSelect Printer and then click Finish. Your virtual printer will be enabled the next time you turn the virtual machine on.\n\n\n\n\n\n\n5. Connect a USB drive to the virtual machine.\n Virtual machines can interact with a USB drive the same way that your normal operating system does. The USB drive cannot be accessed on both the host computer and the virtual machine at the same time.\n\n\n\n\nIf the virtual machine is the active window, the USB drive will be automatically connected to the virtual machine when it is plugged in.\n\n\nIf the virtual machine is not the active window or is not running, select the virtual machine and click the VM menu. Select Removable Devices and then click Connect. The USB drive will automatically connect to your virtual machine.\n\n\n\n\n\n\n6. Take a snapshot of a virtual machine.\n A snapshot is a saved state and will allow you to load the virtual machine to that precise moment as many times as you need.\n\n\n\n\nSelect your virtual machine, click the VM menu, hover over Snapshot and select Take Snapshot.\n\n\nGive your Snapshot a name. You can also give it a description, though this is optional.\n\n\nClick OK to save the Snapshot.\n\n\nLoad a saved Snapshot by clicking the VM menu and then selecting Snapshot. Choose the Snapshot you wish to load from the list and click Go To.\n\n\n\n\n\n\n7. Become familiar with keyboard shortcuts.\n A combination of the \"Ctrl\" and other keys are used to navigate virtual machines. For example, \"Ctrl,\" \"Alt\" and \"Enter\" puts the current virtual machine in full screen mode or moves through multiple machines. \"Ctrl,\" \"Alt\" and \"Tab\" will move between virtual machines when the mouse is being used by 1 machine.", 
            "title": "VMWare"
        }, 
        {
            "location": "/vmware/#vmware", 
            "text": "VMware Workstation is a program that allows you to run a virtual computer within your physical computer. The virtual computer runs as if it was its own machine. A virtual machine is great for trying out new operating systems such as Linux, visiting websites you don't trust, creating a computing environment specifically for children, testing the effects of computer viruses, and much more. You can even print and plug in USB drives. Read this guide to get the most out of VMware Workstation.", 
            "title": "VMWare"
        }, 
        {
            "location": "/vmware/#installing-vmware-workstation", 
            "text": "1. Make sure your computer meets the system requirements.  Because you will be running an operating system from within your own operating system, VMware Workstation has fairly high system requirements. If you don\u2019t meet these, you may not be able to run VMware effectively.\nYou must have a 64-bit processor.\nVMware supports Windows and Linux operating systems.\nYou must have enough memory to run your operating system, the virtual operating system, and any programs inside that operating system. 1 GB is the minimum, but 3 or more is recommended.\nYou must have a 16-bit or 32-bit display adapter. 3D effects will most likely not work well inside the virtual operating system, so gaming is not always efficient.\nYou need at least 1.5 GB of free space to install VMware Workstation, along with at least 1 GB per operating system that you install.   2. Download the VMware software.  You can download the VMware installer from the Download Center on the VMware website. Select the newest version and click the link for the installer. You will need to login with your VMware username.\nYou will be asked to read and review the license agreement before you can download the file.\nYou can only have one version of VMware Workstation installed at a time.   3. Install VMware Workstation.  Once you have downloaded the file, right-click on the file and select \u201cRun as administrator\u201d.\nYou will be asked to review the license again.\nMost users can use the Typical installation option.\nAt the end of the installation, you will be prompted for your license key.\nOnce the installation is finished, restart the computer.\nPart", 
            "title": "Installing VMware Workstation"
        }, 
        {
            "location": "/vmware/#installing-an-operating-system", 
            "text": "1. Open VMware.  Installing a virtual operating system is much like installing it on a regular PC. You will need to have the installation disc or ISO image as well as any necessary licenses for the operating system that you want to install.   You can install most distributions of Linux as well as any version of Windows.    2. Click File.  Select New Virtual Machine and then choose Typical. VMware will prompt you for the installation media. If it recognizes the operating system, it will enable Easy Installation:   Physical disc  \u2013 Insert the installation disc for the operating system you want to install and then select the drive in VMware.  ISO image  \u2013 Browse to the location of the ISO file on your computer.  Install operating system later . This will create a blank virtual disk. You will need to manually install the operating system later.    3. Enter in the details for the operating system.  For Windows and other licensed operating systems, you will need to enter your product key. You will also need to enter your preferred username and a password if you want one.\n* If you are not using Easy Install, you will need to browse the list for the operating system you are installing.   4. Name your virtual machine.  The name will help you identify it on your physical computer. It will also help distinguish between multiple virtual computers running different operating systems.   5. Set the disk size.  You can allocate any amount of free space on your computer to the virtual machine to act as the installed operating system\u2019s hard drive. Make sure to set enough to install any programs that you want to run in the virtual machine.   6. Customize your virtual machine\u2019s virtual hardware.  You can set the virtual machine to emulate specific hardware by clicking the \u201cCustomize Hardware\u201d button. This can be useful if you are trying to run an older program that only supports certain hardware. Setting this is optional.   7. Set the virtual machine to start.  Check the box labeled \u201cPower on this virtual machine after creation\u201d if you want the virtual machine to start up as soon as you finish making it. If you don\u2019t check this box, you can select your virtual machine from the list in VMware and click the Power On button.   8. Wait for your installation to complete.  Once you\u2019ve powered on the virtual machine for the first time, the operating system will begin to install automatically. If you provided all of the correct information during the setup of the virtual machine, then you should not have to do anything.\nIf you didn\u2019t enter your product key or create a username during the virtual machine setup, you will most likely be prompted during the installation of the operating system.   9. Check that VMware Tools is installed.  Once the operating system is installed, the program VMware Tools should be automatically installed. Check that it appears on the desktop or in the program files for the newly installed operating system.  VMware tools are configuration options for your virtual machine, and keeps your virtual machine up to date with any software changes.", 
            "title": "Installing an Operating System"
        }, 
        {
            "location": "/vmware/#navigating-vmware", 
            "text": "1. Start a virtual machine.  To start a virtual machine, click the VM menu and select the virtual machine that you want to turn on. You can choose to start the virtual machine normally, or boot directly to the virtual BIOS.   2. Stop a virtual machine.  To stop a virtual machine, select it and then click the VM menu. Select the Power option.   Power Off  \u2013 The virtual machine turns off as if the power was cut out.  Shut Down Guest  \u2013 This sends a shutdown signal to the virtual machine which causes the virtual machine to shut down as if you had selected the shutdown option.  You can also turn off the virtual machine by using the shutdown option in the virtual operating system.    3. Move files between the virtual machine and your physical computer.  Moving files between your computer and the virtual machine is as simple as dragging and dropping. Files can be moved in both directions between the computer and the virtual machine, and can also be dragged from one virtual machine to another.   When you drag and drop, the original will stay in the original location and a copy will be created in the new location.  You can also move files by copying and pasting.  Virtual machines can connect to shared folders as well.    4. Add a printer to your virtual machine.  You can add any printer to your virtual machine without having to install any extra drivers, as long as it is already installed on your host computer.   Select the virtual machine that you want to add the printer to.  Click the VM menu and select Settings.  Click the Hardware tab, and then click Add. This will start the Add Hardware wizard.  Select Printer and then click Finish. Your virtual printer will be enabled the next time you turn the virtual machine on.    5. Connect a USB drive to the virtual machine.  Virtual machines can interact with a USB drive the same way that your normal operating system does. The USB drive cannot be accessed on both the host computer and the virtual machine at the same time.   If the virtual machine is the active window, the USB drive will be automatically connected to the virtual machine when it is plugged in.  If the virtual machine is not the active window or is not running, select the virtual machine and click the VM menu. Select Removable Devices and then click Connect. The USB drive will automatically connect to your virtual machine.    6. Take a snapshot of a virtual machine.  A snapshot is a saved state and will allow you to load the virtual machine to that precise moment as many times as you need.   Select your virtual machine, click the VM menu, hover over Snapshot and select Take Snapshot.  Give your Snapshot a name. You can also give it a description, though this is optional.  Click OK to save the Snapshot.  Load a saved Snapshot by clicking the VM menu and then selecting Snapshot. Choose the Snapshot you wish to load from the list and click Go To.    7. Become familiar with keyboard shortcuts.  A combination of the \"Ctrl\" and other keys are used to navigate virtual machines. For example, \"Ctrl,\" \"Alt\" and \"Enter\" puts the current virtual machine in full screen mode or moves through multiple machines. \"Ctrl,\" \"Alt\" and \"Tab\" will move between virtual machines when the mouse is being used by 1 machine.", 
            "title": "Navigating VMware"
        }
    ]
}